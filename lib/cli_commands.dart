import 'dart:io';
import 'src/localization_load_sentences.dart';

const commentMaxLen = 50;

Future generateStaticDeclareClass(Map<String, dynamic> config) async {
  print("COnfig $config");
  final sources = config['sources'] as List<String>;
  final destination = config['destination'];
  final destPath = destination['path'];
  var destClassName = destination['classname'];
  var comment = destination['comment'];

  if (destPath == null || !(destPath is String)) {
    print("[Error] `path` field is necessary");
    return;
  }
  if (destClassName == null || !(destClassName is String) || destClassName == "") {
    destClassName = "LocalConst";
  }
  print("cooo $comment");
  if (comment == null || !(comment is bool)) {
    comment = false;
  }

  print("Generate Start.");
  print("sources: `${sources.join(",")}`");
  print("destination path: `$destPath` classname: `$destClassName`");

  final sentences = <String, String>{};
  for (var i = 0; i < sources.length; i++) {
    final filepath = sources[i];
    final data = File(filepath).readAsStringSync();
    loadSentencesByJsonString(data, sentences);
  }

  final file = File(destPath);
  List<String> content = [];
  final now = DateTime.now();
  content.add("// DO NOT edit this file! It's Auto Generated.");
  content.add("// Generated At: ${now.year}-${now.month}-${now.day} ${now.hour}:${now.minute}:${now.second} ");
  content.add("class $destClassName {");
  sentences.forEach((key, value) {
    final variableName = key.toUpperCase().replaceAll(".", "_");
    final varibaleValue = "\"" + "$key".replaceAll("\$", "\\\$") + "\";";
    if (comment) {
      if (value.length > commentMaxLen) {
        value = value.replaceRange(commentMaxLen, null, "...");
      }
      value = value.replaceAll("\n", "\\n");
      value = value.replaceAll("\r", "\\r");
      value = value.replaceAll("\t", "\\t");
      value = value.replaceAll("/", "\\"); //Avoid Comment Wrong
      content.add("\t // $value");
    }
    content.add("\t static const $variableName = $varibaleValue");
  });
  content.add("}");
  final str = content.join("\n");
  await file.writeAsString(str);
  print('Generate Success.');
}
